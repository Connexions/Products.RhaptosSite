<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      lang="en"
      i18n:domain="plone"
      metal:use-macro="here/main_template/macros/master">

<tal:comment tal:replace="nothing">
This template based on version from Plone 2.5.2-1

Rhaptos notes: 
   insert a number of slots for use by Collection composer
     heading
     addcontent
   added ellipis to "select" option
   "Add New Item" -> "Create New Item"
   description is changed to "*Description:* blah"
   changed select all text to mention unselect
   use typesUseViewActionInListings property for "up one level" for collection_panel use
   inserted html, tal, metal, i18n namespaces
   add a class to the orderingCell so that it can be custom styled
   hook up add box to order types if name tOrder is present,
     as originally done in workspace_contents (TODO: refactor this somehow)
   use different factory form if 'customFactory' supplied (TODO: refactor this somehow)
   text-align to center in checkboxes, like in 2.0
   duplicated the Remove, Cut, Copy, and Delete buttons at the top of the content list
     and gave them classes to be styled
   moved the hidden orig_template outside of the folder_buttons macro
   customized empty folder message for workgroup and collection contexts
   populate browserDefaultResult once per folder versus twice per contained folder item(s)
</tal:comment>

  <head>
      <metal:block fill-slot="top_slot">
        <tal:insert tal:replace="nothing"
              tal:define="dummy python:request.set('enable_border', 1)" />
      </metal:block>
  </head>

  <body>

    <div metal:fill-slot="main">
      <tal:protect tal:condition="python: not checkPermission('List folder contents', here)" tal:replace="here/raiseUnauthorized" />
    <metal:main-macro define-macro="main">
    <metal:contentsmacro define-macro="contents"
         tal:define="standalone python:1;
                     contentTypes here/getAllowedTypes;
                     contentFilter contentFilter|request/contentFilter|nothing;
                     b_size b_size|request/b_size|python:100;
                     view_title view_title|request/view_title|string:;
                     contentsMethod python:test(here.portal_type=='Topic', here.queryCatalog, here.getFolderContents);
                     batch batch|python:contentsMethod(contentFilter,batch=True, b_size=b_size);
                     full_view full_view|request/full_view|python:True;">

      <form name="folderContentsForm"
            method="post"
            action="folder_object"
            tal:attributes="action here_url">

        <div metal:use-macro="here/document_actions/macros/document_actions">
            Document actions (print, sendto etc)
        </div>
        <h1 metal:define-slot="h1">
          <tal:block replace="structure python:getattr(here, here.getIcon(1)).tag(alt=here.portal_type)"/>
          <span tal:content="python: view_title and here.utranslate(view_title) or putils.pretty_title_or_id(here)" tal:omit-tag="">Directory Id</span>
        </h1>
        <tal:full_view condition="full_view">

            <a href=""
               class="link-parent"
               tal:define="parent_url python:here.navigationParent(here, fallThroughDefaultPage = False, checkPermissions = ['List folder contents']);
                           use_view python:parent_url and context.aq_parent.portal_type in site_properties.typesUseViewActionInListings;
                           viewpart python:use_view and 'view' or 'folder_contents'"
               tal:condition="parent_url"
               tal:attributes="href string:${parent_url}/${viewpart}"
               i18n:translate="go_to_parent_url">
                Up one level
            </a>

            <p tal:condition="here/Description"><strong>Description:</strong>
               <span tal:replace="here/Description">Description</span>
            </p>

        </tal:full_view>

        <p tal:define="content_object python:getattr(context,'nearestRhaptosObject',None) and context.nearestRhaptosObject();
                       isCollection   python:content_object and content_object.portal_type == 'Collection';"
           tal:condition="not: batch"
           i18n:translate="description_no_visible_items_add_paste">
          <em>
           <tal:span tal:condition="not:isCollection">
             There is no content here. To add content, press the "Create New Item" button,
             paste content from another location, or search for content to add.
           </tal:span>
           <tal:span tal:condition="isCollection">
             There is no content here. To add content, press the "Add New Section" button,
             paste content from another location, or search for modules to add.
           </tal:span>
          </em>
        </p>

        <metal:override define-slot="override_slot">
           <tal:comment replace="nothing">
              Slot for overiding batching mechanism including batch size and
              other parameters
           </tal:comment>
        </metal:override>

        <metal:listing define-macro="folder_listing"
                       tal:define="contentFilter contentFilter|python:{'path':'/'};
                                   use_folder_contents site_properties/typesLinkToFolderContentsInFC|nothing;
                                   use_view_action site_properties/typesUseViewActionInListings|python:();
                                   query_path python:path('contentFilter/path|nothing') or request.get('path',None);
                                   orderable_iface string:OFS.IOrderSupport.IOrderedContainer;
                                   preSorted python:query_path or ((contentFilter and contentFilter.get('sort_on', 'getObjPositionInParent')!='getObjPositionInParent') or (not contentFilter and request.get('sort_on', 'getObjPositionInParent')!='getObjPositionInParent'));
                                   isOrderable python:ifacetool.objectImplements(here, orderable_iface);
                                   nosortclass python:test(isOrderable, 'nosort', '');
                                   canModifyFolderContent is_editable;">
          <div tal:condition="standalone|nothing">
          <metal:add_button define-macro="add_button"
                            tal:define="num_types python:len(contentTypes);">
            <!-- Add Item pulldown -->
            <div tal:attributes="id python:test(path('full_view|string:Not Set'), 'traditional-add-item-pulldown',None);"
                 metal:define-slot="addcontent">
                <label for="select_add_item">
                  <span class="hiddenLabel" i18n:translate="label_add_item">Select an item to add</span>
                </label>

                <select id="select_add_item"
                        name="type_name"
                        tabindex=""
                        tal:condition="python: num_types > 1"
                        tal:attributes="tabindex tabindex/next|nothing">

                  <option value="Select" i18n:translate="label_select">Select...</option>
                  <metal:types tal:define="tOrder tOrder | nothing;
                                           dummy python:tOrder and contentTypes.sort(
                                                           lambda x,y: cmp(y.getId() in tOrder and tOrder.index(x.getId())+1,
                                                                           x.getId() in tOrder and tOrder.index(y.getId())+1));"
                               tal:repeat="ctype contentTypes">
                    <option value="Document"
                            tal:define="Id ctype/getId;
                                        ctitle ctype/Title"
                            tal:attributes="value ctype/getId"
                            tal:content="ctitle"
                            i18n:translate="">Document</option>
                  </metal:types>
                </select>

                <input type="hidden"
                       name="type_name"
                       value="Content Type Id"
                       tal:condition="python: num_types==1"
                       tal:attributes="value python:contentTypes[0].getId()" />

                <input class="standalone"
                       type="submit"
                       name="folder_factories:method"
                       value="Add New Item"
                       tabindex=""
                       tal:define="ttype python: num_types==1 and here.utranslate(contentTypes[0].Title())"
                       tal:condition="python: num_types"
                       tal:attributes="tabindex tabindex/next|nothing;
                                       name customFactory | default;
                                       value python:ttype and here.utranslate('label_create_type',
                                                                              default='Create ${type}',
                                                                              mapping={'type': ttype},
                                                                              domain='rhaptos') or
                                                              here.utranslate('label_create_new_item',
                                                                              default='Create New Item',
                                                                              domain='rhaptos')" />
            </div>
          </metal:add_button>
          </div>

        <div class="visualClear" id="clear-space-before-navigation"><!-- --></div>

        <div class="folder_buttons_top"
             tal:condition="python:batch and len(batch) > 10">
          <metal:buttons use-macro="context/folder_contents/macros/folder_buttons"/>
        </div>

        <!-- Navigation -->
        <div metal:use-macro="here/batch_macros/macros/navigation" />

          <table id="sortable"
                 class="listing"
                 style="width: 100%;"
                 summary="Content listing"
                 i18n:attributes="summary summary_content_listing;">
            <thead>
              <metal:block tal:condition="batch|not:standalone|nothing">
                <tr>
                  <th class="nosort">
                      <input class="noborder"
                             type="checkbox"
                             src="select_all_icon.gif"
                             name="selectButton"
                             title="Select/unselect all items"
                             onClick="toggleSelect(this,'paths:list');"
                             tal:attributes="src string:$portal_url/select_all_icon.gif"
                             alt="Select/unselect all items"
                             i18n:attributes="title label_select_all_items; alt label_select_all_items;"
                  />
                  </th>
                  <metal:header_slot metal:define-slot="listingheader">
                  <th tal:attributes="class python:nosortclass"
                      >&nbsp;<tal:title i18n:translate="listingheader_title"
                      >Title</tal:title>&nbsp;</th>
                  <th tal:attributes="class python:nosortclass"
                      >&nbsp;<tal:size i18n:translate="listingheader_size"
                      >Size</tal:size>&nbsp;</th>
                  <th tal:attributes="class python:nosortclass"
                      >&nbsp;<tal:modified i18n:translate="listingheader_modified"
                      >Modified</tal:modified>&nbsp;</th>
                  <th tal:attributes="class python:nosortclass"
                      >&nbsp;<tal:state i18n:translate="listingheader_status"
                      >State</tal:state>&nbsp;</th>
                  <th class="nosort"
                      tal:condition="python:isOrderable and canModifyFolderContent and not preSorted"
                      >&nbsp;<tal:order i18n:translate="listingheader_order"
                      >Order</tal:order>&nbsp;</th>
                  </metal:header_slot>
                </tr>
              </metal:block>
            </thead>

            <metal:block tal:condition="batch|not:standalone|nothing">
            <tbody tal:define="arrowUp nocall:portal/arrowUp.gif;
                               arrowUp python:arrowUp.tag(alt='Move Up');
                               arrowDown nocall:portal/arrowDown.gif;
                               arrowDown python:arrowDown.tag(alt='Move Down');
                               arrowTop nocall:portal/arrowTop.gif;
                               arrowTop python:arrowTop.tag(alt='Move Top');
                               arrowBottom nocall:portal/arrowBottom.gif;
                               arrowBottom python:arrowBottom.tag(alt='Move Bottom');
                               getRelativeContentURL nocall:utool/getRelativeContentURL;
                               browserDefaultResult here/browserDefault;
                               ">
                <tal:items tal:repeat="item batch">
                   <tr tal:define="oddrow               repeat/item/odd;
                                   item_url             item/getURL|item/absolute_url;
                                   item_id              item/getId;
                                   item_path            item/getPath|python:'/'.join(item.getPhysicalPath());
                                   item_title_or_id   item/pretty_title_or_id;
                                   item_description     item/Description;
                                   item_type            item/portal_type;
                                   item_size            item/getObjSize;
                                   item_modified        item/ModificationDate;
                                   item_type_class      python:'visualIcon contenttype-' + normalizeString(item_type);
                                   item_wf_state        item/review_state|python: wtool.getInfoFor(item, 'review_state', '');
                                   item_state_title     python:wtool.getTitleForStateOnType(item_wf_state, item_type);
                                   item_wf_state_class  python:'state-' + normalizeString(item_wf_state);
                                   item_use_view        python:item_type in use_view_action;
                                   hasGetUrl            python:hasattr(item.aq_explicit, 'getURL');
                                   item_rel_url         python:hasGetUrl and item.getURL(relative=1) or getRelativeContentURL(item);
                                   isBrowserDefault     python:len(browserDefaultResult[1]) == 1 and item.id == browserDefaultResult[1][0];
                                   item_folderish       item/is_folderish|nothing"
                       tal:attributes="class python:test(oddrow, 'draggable even', 'draggable odd');
                                       id string:folder-contents-item-${item_id};" >

                       <tal:comment replace="nothing">
                            * We have to check if the browserDefault stuff is really necessary
                            * Create title_or_id metadata in the catalog (why not just use item.Title or item.getId? (alecm))
                       </tal:comment>

                       <td class="notDraggable checkCol" style="text-align:center">
                           <input type="checkbox"
                                  class="noborder"
                                  name="paths:list" id="#"
                                  value="#"
                                  tal:attributes="value   item_path;
                                                  id      string:cb_$item_id;
                                                  checked python:test(request.get('ids_checked', False), 'checked', None);
                                                  alt     string:Select $item_title_or_id;
                                                  title   string:Select $item_title_or_id" />
                      <input type="hidden" name="obj_paths:list" value="#"
                             tal:attributes="value item_rel_url" />

                    </td>
                    <metal:item_slot metal:define-slot="item_display">
                    <td tal:define="url python:test(item_use_view, item_url+'/view',
                                    test(item_folderish, item_url+'/folder_contents', item_url+'/'));">
                        <span tal:attributes="class item_type_class">
                        <a href="#" tal:attributes="href  url;
                                                  title string: $item_type: $item_description;
                                                  class string:$item_wf_state_class visualIconPadding;">
                            <strong tal:omit-tag="python:not isBrowserDefault">
                            <span tal:content="item_title_or_id">
                              Item Title
                            </span>
                            </strong>
                        </a>
                        </span>

                        <span class="state-expired"
                              tal:condition="python:portal.isExpired(item)"
                              i18n:translate="time_expired">expired</span>
                    </td>

                    <td>
                      <span tal:condition="not: item_size"> &nbsp; </span>
                      <span tal:condition="python:item_size>0"
                            tal:content="item_size"
                            tal:attributes="class item_wf_state_class"> size </span>
                    </td>
                    <td tal:content="python:toLocalizedTime(item_modified, long_format=1)"
                        tal:attributes="class item_wf_state_class">
                        08/19/2001 03:01 AM
                    </td>
                    <td>
                        <span i18n:translate=""
                              tal:condition="item_state_title"
                              tal:content="item_state_title"
                              tal:attributes="class item_wf_state_class" />
                        <span tal:condition="not: item_state_title">&nbsp;</span>
                    </td>
                    <td class="orderingCell"
                        tal:define="pps python:modules['Products.PythonScripts.standard'];
                                    quoted_item_id python:pps.url_quote(item_id)"
                        tal:condition="python:isOrderable and canModifyFolderContent and not preSorted">
                      <a href=""
                         title="Move item top"
                         i18n:attributes="title title_move_item_top;"
                         tal:attributes="href string:$here_url/folder_position?position=top&amp;id=$quoted_item_id&amp;template_id=${template_id}">
                         <img tal:replace="structure arrowTop" />
                      </a>
                      &nbsp;
                      <a href=""
                         title="Move item up"
                         i18n:attributes="title title_move_item_up;"
                         tal:attributes="href string:$here_url/folder_position?position=up&amp;id=$quoted_item_id&amp;template_id=${template_id}">
                         <img tal:replace="structure arrowUp" />
                      </a>
                      &nbsp;
                      <a href=""
                         title="Move item down"
                         i18n:attributes="title title_move_item_down;"
                         tal:attributes="href string:$here_url/folder_position?position=down&amp;id=$quoted_item_id&amp;template_id=${template_id}">
                         <img tal:replace="structure arrowDown" />
                      </a>
                      &nbsp;
                      <a href=""
                         title="Move item bottom"
                         i18n:attributes="title title_move_item_bottom;"
                         tal:attributes="href string:$here_url/folder_position?position=bottom&amp;id=$quoted_item_id&amp;template_id=${template_id}">
                         <img tal:replace="structure arrowBottom" />
                      </a>
                    </td>
                    </metal:item_slot>
                   </tr>
                </tal:items>
            </tbody>
            </metal:block>
            </table>
            <!-- Navigation -->
            <div metal:use-macro="here/batch_macros/macros/navigation" />
        </metal:listing>

        <input type="hidden" name="orig_template"
               tal:attributes="value template_id"/>

        <div class="folder_buttons_bottom">
        <metal:buttons define-macro="folder_buttons">
          <tal:buttons tal:repeat="button actions/folder_buttons|nothing"
                       tal:define="contentFilter contentFilter|python:{'path':'/'};
                                   query_path python:path('contentFilter/path|nothing') or request.get('path',None) or context.portal_type == 'Topic';">
            <input class="context"
                   type="submit"
                   name=""
                   value=""
                   tabindex=""
                   tal:condition="python:(batch or here.cb_dataValid and button['id'] == 'paste') and not ( query_path and button['id'] in ['cut','copy','paste'])"
                   i18n:attributes="value"
                   tal:attributes="value button/name;
                                   name button/url;
                                   tabindex tabindex/next;
                                   class python:test((button['id'] == 'paste'), 'standalone', 'context')" />
          </tal:buttons>
        </metal:buttons>
        </div>
      </form>

    </metal:contentsmacro>
    </metal:main-macro>
    </div>


  </body>
</html>
